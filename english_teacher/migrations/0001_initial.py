# Generated by Django 3.1.7 on 2021-05-23 10:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=20, verbose_name='Введите имя')),
                ('last_name', models.CharField(max_length=20, verbose_name='Введите имя')),
                ('age', models.IntegerField(verbose_name='Ваш возраст')),
                ('is_pupil', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_message', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark', models.TextField(blank=True, null=True)),
                ('date_next_exercise', models.DateTimeField(blank=True, null=True, verbose_name='Дата следующего занятия')),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Домашнее задание',
                'verbose_name_plural': 'Домашние задания',
            },
        ),
        migrations.CreateModel(
            name='ReviewsTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('ball', models.SmallIntegerField(blank=True, null=True)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='SelfStudyWordName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_study', models.DateField(default=django.utils.timezone.now)),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_study_word', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_study'],
            },
        ),
        migrations.CreateModel(
            name='StudyBooks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('book', models.FileField(upload_to='books/')),
            ],
            options={
                'verbose_name': 'Учебник',
                'verbose_name_plural': 'Учебники',
            },
        ),
        migrations.CreateModel(
            name='TeacherUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('age', models.IntegerField(verbose_name='Возраст')),
                ('phone', models.BigIntegerField()),
            ],
            options={
                'verbose_name': 'Учитель',
                'verbose_name_plural': 'Учителя',
            },
        ),
        migrations.CreateModel(
            name='VideoMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('video', models.FileField(upload_to='media/')),
            ],
            options={
                'verbose_name': 'Видео урок',
                'verbose_name_plural': 'Видео уроки',
            },
        ),
        migrations.CreateModel(
            name='StudyWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.SmallIntegerField(default=0)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('english_word', models.TextField()),
                ('rus_word', models.TextField()),
                ('home_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='word_homework', to='english_teacher.homework')),
            ],
        ),
        migrations.CreateModel(
            name='StudyAudioBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('audio', models.FileField(blank=True, null=True, upload_to='books/<django.db.models.fields.related.ForeignKey>/')),
                ('name_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audio_book', to='english_teacher.studybooks')),
                ('name_homework', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audio_homework', to='english_teacher.homework')),
            ],
        ),
        migrations.CreateModel(
            name='SelfStudyWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english_word', models.TextField()),
                ('rus_word', models.TextField()),
                ('list_words', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_word_name', to='english_teacher.selfstudywordname')),
            ],
            options={
                'verbose_name': 'Самостоятельное изучение слов',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_offer', models.TextField()),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Предложениe',
                'verbose_name_plural': 'Предложения',
            },
        ),
        migrations.AddField(
            model_name='homework',
            name='audio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_audio', to='english_teacher.studyaudiobook'),
        ),
        migrations.AddField(
            model_name='homework',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_book', to='english_teacher.studybooks'),
        ),
        migrations.AddField(
            model_name='homework',
            name='custom_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_homework', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='name_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_teacher', to='english_teacher.teacheruser'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
